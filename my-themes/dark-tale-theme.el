;;; dark-tale-theme.el --- A sophisticated dark theme with modern aesthetics -*- lexical-binding: t; -*-

(deftheme dark-tale "A sophisticated dark theme with modern aesthetics.")

(let* ((bg-main            "#000000")
       (bg-alt             "#0C0C0C")
       (bg-popup           "#0f0f0f")
       (bg-contrast        "#141414")
       (bg-code            "#161616")
       (bg-dim             "#171717")
       (bg-inactive-sel    "#2B2B2B")
       (bg-selection       "#2d2d2d")
       (bg-special         "#0a0a0a")

       (fg-main            "#EDEDED")
       (fg-bright          "#ffffff")
       (fg-popup           "#fcfcfc")

       (grey-subtle        "#A3A3A3")
       (grey-border        "#585858")
       (grey-docstring     "#B8B8B8")
       (grey-comment-blue  "#707A9A")

       (purple             "#C372FC")
       (lavender           "#B084EB")
       (magenta            "#F7768E")
       (rose               "#FF6B8F")
       (green              "#9ECE6A")
       (teal               "#26D17F")
       (yellow             "#E0AF68")
       (blue               "#7AA2F7")

       (focus-bg              "#363636")
       (hover-bg              "#404040")
       (primary-selection     bg-contrast)
       (secondary-selection   "#2D4B4B")
       (visual-selection      "#4B3B66")
       (inactive-selection    bg-inactive-sel)

       (success-muted      "#5C8C4A")
       (warning-muted      "#B0864B")
       (error-muted        "#AD3E3E")
       (info-muted         "#566C9E")

       (diff-added-bg      "#10341C")
       (diff-added-fg      "#7EC699")
       (diff-removed-bg    "#38181D")
       (diff-removed-fg    "#FF8FA3")
       (diff-changed-bg    "#2B2B16")
       (diff-changed-fg    "#E5C07B")

       (hint-fg            "#878787")
       (completion-bg      "#1A1A1A"))

  (custom-theme-set-faces
   'dark-tale
   ;; BASIC FACES
   `(cursor ((t (:background ,fg-bright))))
   `(default ((t (:background ,bg-main :foreground ,fg-main))))
   `(fill-column-indicator ((t (:background ,bg-dim))))
   `(fringe ((t (:background ,bg-main))))
   `(highlight ((t (:background ,hover-bg))))
   `(hl-line ((t (:background ,bg-contrast))))
   `(link ((t (:foreground ,purple :underline t))))
   `(minibuffer-prompt ((t (:background ,bg-main :foreground ,purple :bold t))))
   `(region ((t (:background ,visual-selection :foreground ,fg-main :extend t))))
   `(secondary-selection ((t (:background ,secondary-selection :extend t))))
   `(vertical-border ((t (:foreground ,grey-border))))
   `(window-divider ((t (:foreground ,grey-border))))
   `(success ((t (:foreground ,success-muted :weight bold))))
   `(warning ((t (:foreground ,warning-muted :weight bold))))
   `(error ((t (:foreground ,error-muted :weight bold))))

   ;; General Purpose Faces
   `(shadow ((t (:foreground ,grey-border))))
   `(tooltip ((t (:background ,bg-popup :foreground ,fg-main))))
   `(button ((t (:foreground ,purple :underline t))))
   `(header-line ((t (:background ,bg-alt :foreground ,grey-docstring :weight normal))))

   ;; Selection-related faces
   `(lazy-highlight ((t (:background ,visual-selection :foreground ,fg-bright))))
   `(isearch ((t (:background ,purple :foreground ,bg-main :bold t))))
   `(isearch-fail ((t (:background ,error-muted :foreground ,magenta))))
   `(match ((t (:background ,success-muted :foreground ,green))))
   `(isearch-overlay ((t (:background ,purple :foreground ,bg-main :weight bold))))
   `(lazy-highlight-overlay ((t (:background ,bg-dim :box (:line-width -1 :color ,purple)))))
   `(match-overlay ((t (:background ,bg-selection :foreground ,green))))
   `(rectangle-preview ((t (:background ,primary-selection))))
   `(region-inactive ((t (:background ,inactive-selection))))

   ;; Specific minibuffer-related faces
   `(completions-common-part ((t (:foreground ,purple))))
   `(completions-first-difference ((t (:foreground ,magenta))))

   ;; modeline
   `(mode-line ((t (:background ,bg-main :foreground ,fg-bright :box (:line-width (5 . 10) :color ,bg-main)))))
   `(mode-line-active ((t (:background ,bg-main :foreground ,fg-bright :box (:line-width (5 . 10) :color ,bg-main)))))
   `(mode-line-inactive ((t (:background ,bg-alt :foreground ,grey-subtle :box (:line-width (5 . 10) :color ,bg-alt)))))
   `(mode-line-highlight ((t  (:background ,hover-bg :foreground ,fg-bright))))
   `(mode-line-buffer-id ((t (:foreground ,purple :bold t))))
   `(mode-line-emphasis ((t (:foreground ,green))))

   ;; FONT LOCK & TREESITTER FACES
   `(font-lock-builtin-face ((t (:foreground ,magenta))))
   `(font-lock-comment-delimiter-face ((t (:foreground ,grey-subtle :slant italic))))
   `(font-lock-comment-face ((t (:foreground ,grey-comment-blue :slant italic))))
   `(font-lock-constant-face ((t (:foreground ,purple :weight bold))))
   `(font-lock-doc-face ((t (:foreground ,grey-docstring :slant italic))))
   `(font-lock-function-name-face ((t (:foreground ,purple))))
   `(font-lock-keyword-face ((t (:foreground ,magenta :slant italic))))
   `(font-lock-preprocessor-face ((t (:foreground ,yellow :weight bold))))
   `(font-lock-string-face ((t (:foreground ,yellow))))
   `(font-lock-type-face ((t (:foreground ,blue))))
   `(font-lock-variable-name-face ((t (:foreground ,lavender :slant italic))))
   `(font-lock-warning-face ((t (:foreground ,warning-muted :bold t))))
   `(treesit-font-lock-face-function-call     ((t (:foreground ,purple))))
   `(treesit-font-lock-face-function-name     ((t (:foreground ,purple))))
   `(treesit-font-lock-face-type              ((t (:foreground ,blue))))
   `(treesit-font-lock-face-variable-name     ((t (:foreground ,lavender :slant italic))))
   `(treesit-font-lock-face-constant          ((t (:foreground ,purple :weight bold))))
   `(treesit-font-lock-face-keyword           ((t (:foreground ,magenta :slant italic))))
   `(treesit-font-lock-face-string            ((t (:foreground ,yellow))))
   `(treesit-font-lock-face-comment           ((t (:foreground ,grey-comment-blue :slant italic))))
   `(treesit-font-lock-face-preprocessor      ((t (:foreground ,yellow :weight bold))))
   `(treesit-font-lock-face-property-name     ((t (:foreground ,blue))))
   `(treesit-font-lock-face-tag               ((t (:foreground ,magenta))))
   `(treesit-font-lock-face-attribute         ((t (:foreground ,lavender :slant italic))))
   `(treesit-font-lock-face-punctuation       ((t (:foreground ,grey-border))))

   ;; Whitespace
   `(whitespace-space ((t (:foreground ,grey-border))))
   `(whitespace-tab ((t (:foreground ,grey-border))))
   `(whitespace-newline ((t (:foreground ,grey-border))))
   `(whitespace-trailing ((t (:background ,error-muted))))
   `(whitespace-empty ((t (:background ,warning-muted))))

   ;; tab-bar-mode
   `(tab-bar ((t (:background ,bg-main :foreground ,fg-main))))
   `(tab-bar-tab-highlight ((t (:background ,bg-alt :foreground ,fg-main))))
   `(tab-bar-tab ((t (:background ,bg-contrast :foreground ,fg-popup :height 95
                                  :box (:line-width (1 . 5) :color nil :style flat-button)))))
   `(tab-bar-tab-inactive ((t (:background ,bg-main :foreground ,grey-subtle :height 95 :weight extra-light
                                           :box (:line-width (1 . 5) :color nil :style flat-button)))))
   `(tab-bar-tab-ungrouped ((t (:background ,bg-contrast :foreground ,grey-subtle))))
   `(tab-bar-tab-group-current ((t (:background ,bg-alt :foreground ,purple))))
   `(tab-bar-tab-group-inactive ((t (:background ,bg-contrast :foreground ,grey-subtle))))

   ;; THIRD PARTY PACKAGES
   ;; web-mode
   `(web-mode-string-face ((t (:foreground ,yellow))))
   `(web-mode-html-tag-face ((t (:foreground ,magenta))))
   `(web-mode-html-tag-bracket-face ((t (:foreground ,magenta))))
   `(web-mode-html-attr-name-face ((t (:foreground ,yellow))))
   `(web-mode-css-property-name-face ((t (:foreground ,purple))))
   `(web-mode-css-selector-face ((t (:foreground ,magenta))))
   `(web-mode-json-key-face ((t (:foreground ,purple))))
   `(web-mode-json-string-face ((t (:foreground ,yellow))))

   ;; company-mode
   `(company-tooltip ((t (:background ,bg-popup :foreground ,fg-popup))))
   `(company-tooltip-common ((t (:foreground ,purple))))
   `(company-tooltip-selection ((t (:background ,bg-selection))))
   `(company-scrollbar-fg ((t (:background ,grey-border))))
   `(company-scrollbar-bg ((t (:background ,bg-popup))))

   ;; org-mode
   `(org-level-1 ((t (:foreground ,lavender :height 1.3))))
   `(org-level-2 ((t (:foreground ,rose :height 1.2))))
   `(org-level-3 ((t (:foreground ,teal :height 1.1))))
   `(org-level-4 ((t (:foreground ,blue))))
   `(org-todo ((t (:foreground ,magenta :bold t))))
   `(org-done ((t (:foreground ,green :bold t))))
   `(org-block ((t (:background ,bg-code :extend t))))
   `(org-block-begin-line ((t (:foreground ,grey-comment-blue :extend t))))
   `(org-quote ((t (:background ,bg-contrast :slant italic :extend t))))
   `(org-checkbox-done-text ((t (:foreground ,grey-border :strike-through t))))
   `(org-superstar-leading-bullet-face ((t (:foreground ,grey-subtle))))
   `(org-superstar-item-bullet-face ((t (:foreground ,purple))))
   `(org-roam-node-highlight-face ((t (:background ,focus-bg))))
   `(org-modern-tag-face ((t (:foreground ,blue :background ,bg-contrast :box (:line-width -1 :color ,bg-contrast :style released-button) :height 0.9))))

   ;; magit, diffs, and VC
   `(magit-section-heading ((t (:foreground ,purple))))
   `(magit-branch-current ((t (:foreground ,yellow))))
   `(magit-diff-added ((t (:foreground ,green))))
   `(magit-diff-removed ((t (:foreground ,magenta))))
   `(magit-diff-context ((t (:foreground ,grey-subtle))))
   `(magit-blame-highlight ((t (:background ,bg-contrast :foreground ,fg-bright))))
   `(magit-blame-heading ((t (:background ,bg-dim :foreground ,grey-subtle))))
   `(magit-blame-name ((t (:foreground ,purple))))
   `(magit-blame-date ((t (:foreground ,yellow))))
   `(magit-blame-summary ((t (:foreground ,fg-bright))))
   `(diff-added ((t (:background ,diff-added-bg :foreground ,diff-added-fg))))
   `(diff-removed ((t (:background ,diff-removed-bg :foreground ,diff-removed-fg))))
   `(diff-changed ((t (:background ,diff-changed-bg :foreground ,diff-changed-fg))))
   `(diff-hl-insert ((t (:foreground ,diff-added-fg :background ,diff-added-bg))))
   `(diff-hl-delete ((t (:foreground ,diff-removed-fg :background ,diff-removed-bg))))
   `(diff-hl-change ((t (:foreground ,diff-changed-fg :background ,diff-changed-bg))))
   `(ediff-current-diff-A ((t (:background ,diff-removed-bg :foreground ,diff-removed-fg))))
   `(ediff-current-diff-B ((t (:background ,diff-added-bg :foreground ,diff-added-fg))))
   `(ediff-current-diff-C ((t (:background ,diff-changed-bg :foreground ,diff-changed-fg))))
   `(ediff-fine-diff-A ((t (:background ,magenta :foreground ,bg-main))))
   `(ediff-fine-diff-B ((t (:background ,green :foreground ,bg-main))))
   `(ediff-fine-diff-C ((t (:background ,yellow :foreground ,bg-main))))
   `(ediff-even-diff-face ((t (:inherit default))))
   `(ediff-odd-diff-face ((t (:background ,bg-code))))
   `(git-gutter:added ((t (:foreground ,diff-added-fg))))
   `(git-gutter:deleted ((t (:foreground ,diff-removed-fg))))
   `(git-gutter:modified ((t (:foreground ,diff-changed-fg))))
   `(git-gutter-fr:added ((t (:foreground ,diff-added-fg))))
   `(git-gutter-fr:deleted ((t (:foreground ,diff-removed-fg))))
   `(git-gutter-fr:modified ((t (:foreground ,diff-changed-fg))))

   ;; markdown-mode
   `(markdown-header-face ((t (:foreground ,purple))))
   `(markdown-code-face ((t (:background ,bg-code))))
   `(markdown-inline-code-face ((t (:foreground ,yellow))))
   `(markdown-link-face ((t (:foreground ,purple))))

   ;; dired
   `(dired-directory ((t (:foreground ,purple))))
   `(dired-marked ((t (:foreground ,yellow))))
   `(dired-flagged ((t (:foreground ,magenta))))

   ;; eshell
   `(eshell-prompt ((t (:foreground ,purple))))
   `(eshell-ls-directory ((t (:foreground ,purple))))
   `(eshell-ls-executable ((t (:foreground ,green))))
   `(eshell-ls-symlink ((t (:foreground ,yellow))))

   ;; Terminal colors
   `(term-color-black ((t (:foreground ,bg-main :background ,bg-main))))
   `(term-color-red ((t (:foreground ,magenta :background ,magenta))))
   `(term-color-green ((t (:foreground ,green :background ,green))))
   `(term-color-yellow ((t (:foreground ,yellow :background ,yellow))))
   `(term-color-blue ((t (:foreground ,purple :background ,purple))))
   `(term-color-magenta ((t (:foreground ,purple :background ,purple))))
   `(term-color-cyan ((t (:foreground ,green :background ,green))))
   `(term-color-white ((t (:foreground ,fg-bright :background ,fg-bright))))

   ;; Which-key
   `(which-key-key-face ((t (:foreground ,purple))))
   `(which-key-separator-face ((t (:foreground ,grey-subtle))))
   `(which-key-note-face ((t (:foreground ,grey-subtle))))
   `(which-key-command-description-face ((t (:foreground ,fg-bright))))
   `(which-key-group-description-face ((t (:foreground ,yellow))))
   `(which-key-special-key-face ((t (:foreground ,magenta))))

   ;; ivy/helm
   `(ivy-current-match ((t (:background ,bg-selection))))
   `(ivy-minibuffer-match-face-1 ((t (:foreground ,purple))))
   `(helm-selection ((t (:background ,bg-selection))))
   `(helm-match ((t (:foreground ,purple))))

   ;; Bookmarks
   `(bookmark-face ((t (:foreground ,purple :background ,bg-contrast))))
   `(bookmark-menu-heading ((t (:foreground ,purple :weight bold))))
   `(bookmark-menu-bookmark ((t (:foreground ,magenta))))

   ;; Quick-peek faces
   `(quick-peek-background-face ((t (:background ,bg-popup))))
   `(quick-peek-border-face ((t (:background ,grey-border))))
   `(quick-peek-padding-face ((t (:background ,bg-popup))))
   `(quick-peek-header-face ((t (:background ,bg-alt :foreground ,fg-bright :height 1.1))))

   ;; Flycheck etc.
   `(flycheck-error ((t (:underline (:style wave :color ,magenta)))))
   `(flycheck-info ((t (:underline (:style wave :color ,purple)))))
   `(flycheck-warning ((t (:underline (:style wave :color ,yellow)))))
   `(flycheck-fringe-error ((t (:foreground ,magenta))))
   `(flycheck-fringe-warning ((t (:foreground ,yellow))))
   `(flycheck-fringe-info ((t (:foreground ,purple))))
   `(flycheck-error-list-error ((t (:foreground ,magenta))))
   `(flycheck-error-list-warning ((t (:foreground ,yellow))))
   `(flycheck-error-list-info ((t (:foreground ,purple))))
   `(flycheck-error-list-line-number ((t (:foreground ,grey-subtle))))
   `(flycheck-error-list-column-number ((t (:foreground ,grey-subtle))))
   `(flycheck-error-list-filename ((t (:foreground ,purple))))
   `(flycheck-error-list-highlight ((t (:background ,bg-selection :foreground ,fg-bright))))
   `(flycheck-verify-select-checker ((t (:background ,bg-selection))))
   `(flycheck-error-list-checker-name ((t (:foreground ,yellow))))
   `(flycheck-error-list-id ((t (:foreground ,purple))))
   `(flycheck-error-list-id-with-explainer ((t (:foreground ,purple :box (:line-width -1 :color ,purple)))))
   `(flycheck-inline-error ((t (:background ,error-muted :foreground ,magenta :box (:line-width -1 :color ,magenta)))))
   `(flycheck-inline-warning ((t (:background ,warning-muted :foreground ,yellow :box (:line-width -1 :color ,yellow)))))
   `(flycheck-inline-info ((t (:background ,bg-contrast :foreground ,purple :box (:line-width -1 :color ,purple)))))
   `(flycheck-color-mode-line-error-face ((t (:foreground ,magenta :weight bold))))
   `(flycheck-color-mode-line-warning-face ((t (:foreground ,yellow :weight bold))))
   `(flycheck-color-mode-line-info-face ((t (:foreground ,purple :weight bold))))
   `(flycheck-color-mode-line-running-face ((t (:foreground ,grey-subtle :weight bold))))
   `(flycheck-color-mode-line-success-face ((t (:foreground ,green :weight bold))))
   `(flycheck-posframe-face ((t (:foreground ,fg-bright))))
   `(flycheck-posframe-background-face ((t (:background ,bg-popup))))
   `(flycheck-posframe-error-face ((t (:foreground ,magenta :weight bold))))
   `(flycheck-posframe-warning-face ((t (:foreground ,yellow :weight bold))))
   `(flycheck-posframe-info-face ((t (:foreground ,purple :weight bold))))
   `(flycheck-posframe-border-face ((t (:foreground ,grey-border))))
   `(flycheck-error-list-header ((t (:background ,bg-alt :foreground ,fg-bright :weight bold))))
   `(flycheck-error-list-separator ((t (:foreground ,grey-border))))
   `(flycheck-error-list-checkername-face ((t (:foreground ,purple))))
   `(flycheck-inline-message ((t (:inherit default :slant italic))))
   `(flycheck-inline-suggestion ((t (:foreground ,green :slant italic))))
   `(flycheck-inline-explanation ((t (:foreground ,grey-subtle :slant italic))))
   `(flycheck-checker-disabled-face ((t (:foreground ,grey-subtle :strike-through t))))
   `(flycheck-checker-running-face ((t (:foreground ,yellow :slant italic))))
   `(flycheck-checker-success-face ((t (:foreground ,green :weight bold))))
   `(flycheck-checker-error-face ((t (:foreground ,magenta :weight bold))))
   `(flycheck-checker-warning-face ((t (:foreground ,yellow :weight bold))))
   `(flycheck-checker-info-face ((t (:foreground ,purple :weight bold))))
   `(flycheck-error-overlay ((t (:underline (:style wave :color ,magenta) :background ,bg-contrast))))
   `(flycheck-warning-overlay ((t (:underline (:style wave :color ,yellow) :background ,bg-contrast))))
   `(flycheck-info-overlay ((t (:underline (:style wave :color ,purple) :background ,bg-contrast))))
   `(flycheck-overlay-error ((t :background ,error-muted :foreground ,bg-inactive-sel :height 0.9 :weight normal)))
   `(flycheck-overlay-warning ((t :background ,warning-muted :foreground ,bg-inactive-sel :height 0.9 :weight normal)))
   `(flycheck-overlay-info ((t :background ,info-muted :foreground ,bg-inactive-sel :height 0.9 :weight normal)))

   ;; Overlays
   `(overlay ((t (:background ,bg-contrast))))
   `(pos-tip-overlay ((t (:background ,bg-popup :foreground ,fg-main))))
   `(eldoc-highlight-function-argument-overlay ((t (:foreground ,purple :weight bold))))
   `(eldoc-box-border ((t (:background ,grey-border))))
   `(eldoc-box-body ((t (:background ,bg-popup :foreground ,fg-main))))
   `(mc/cursor-overlay ((t (:background ,purple :foreground ,bg-main))))
   `(mc/cursor-bar-overlay ((t (:background ,purple :height 1))))
   `(rectangle-overlay ((t (:background ,bg-selection :foreground ,fg-bright))))
   `(semantic-highlight-func-overlay ((t (:background ,bg-selection))))
   `(semantic-tag-overlay ((t (:background ,bg-contrast :box t))))
   `(highlight-changes ((t (:foreground ,yellow :background ,bg-contrast :underline t))))
   `(highlight-changes-delete ((t (:foreground ,magenta :background ,bg-contrast :strike-through t))))
   `(transient-mark-overlay ((t (:background ,bg-selection))))
   `(secondary-selection-overlay ((t (:background ,bg-dim :foreground ,fg-bright))))
   `(avy-overlay-lead-face ((t (:background ,purple :foreground ,bg-main :weight bold))))
   `(avy-overlay-background-face ((t (:background ,bg-code))))
   `(pulse-highlight-face ((t (:background ,secondary-selection))))
   `(pulse-highlight-start-face ((t (:background ,visual-selection))))

   ;; blamer-mode
   `(blamer-face ((t (:foreground ,grey-subtle :italic t :height 0.9 :weight light))))

   ;; centaur-tabs
   `(centaur-tabs-active-bar-face ((t (:background ,purple))))
   `(centaur-tabs-close-mouse-face ((t (:foreground ,magenta))))
   `(centaur-tabs-close-selected ((t (:inherit centaur-tabs-selected :foreground ,fg-bright))))
   `(centaur-tabs-close-unselected ((t (:inherit centaur-tab-unselected :foreground ,grey-subtle))))
   `(centaur-tabs-default ((t (:background ,bg-main :foreground ,fg-main :height 0.9))))
   `(centaur-tabs-group-face ((t (:foreground ,purple))))
   `(centaur-tabs-modified-marker-selected ((t (:inherit centaur-tabs-selected :foreground ,magenta :italic t))))
   `(centaur-tabs-modified-marker-unselected ((t (:inherit centaur-tabs-unselected :foreground ,magenta :italic t))))
   `(centaur-tabs-name-mouse-face ((t (:foreground ,fg-bright :bold t))))
   `(centaur-tabs-selected ((t (:background ,bg-alt :foreground ,fg-bright))))
   `(centaur-tabs-selected-modified ((t (:background ,bg-alt :foreground ,yellow))))
   `(centaur-tabs-unselected ((t (:background ,bg-contrast :foreground ,grey-subtle))))
   `(centaur-tabs-unselected-modified ((t (:background ,bg-contrast :foreground ,yellow))))
   `(centaur-tabs-bar ((t (:background ,bg-main))))

   ;; LSP mode
   `(lsp-face-highlight-read ((t (:background ,focus-bg))))
   `(lsp-face-highlight-textual ((t (:background ,focus-bg))))
   `(lsp-face-highlight-write ((t (:background ,focus-bg))))
   `(lsp-headerline-breadcrumb-path-error-face ((t (:foreground ,magenta))))
   `(lsp-headerline-breadcrumb-path-face ((t (:foreground ,grey-subtle))))
   `(lsp-headerline-breadcrumb-path-hint-face ((t (:foreground ,green))))
   `(lsp-headerline-breadcrumb-path-info-face ((t (:foreground ,purple))))
   `(lsp-headerline-breadcrumb-path-warning-face ((t (:foreground ,yellow))))
   `(lsp-headerline-breadcrumb-project-prefix-face ((t (:foreground ,purple))))
   `(lsp-headerline-breadcrumb-symbols-face ((t (:foreground ,yellow))))
   `(lsp-modeline-code-actions-face ((t (:foreground ,yellow))))
   `(lsp-ui-doc-background ((t (:background ,bg-popup))))
   `(lsp-ui-doc-border ((t (:background ,grey-border))))
   `(lsp-ui-doc-header ((t (:background ,bg-alt :foreground ,fg-bright))))
   `(lsp-ui-peek-filename ((t (:foreground ,purple))))
   `(lsp-ui-peek-footer ((t (:background ,bg-alt))))
   `(lsp-ui-peek-header ((t (:background ,bg-alt :foreground ,fg-bright))))
   `(lsp-ui-peek-highlight ((t (:background ,bg-selection :foreground ,fg-bright))))
   `(lsp-ui-peek-line-number ((t (:foreground ,grey-subtle))))
   `(lsp-ui-peek-list ((t (:background ,bg-popup))))
   `(lsp-ui-peek-peek ((t (:background ,bg-popup))))
   `(lsp-ui-peek-selection ((t (:background ,bg-selection :foreground ,fg-bright))))
   `(lsp-ui-sideline-code-action ((t (:foreground ,yellow))))
   `(lsp-ui-sideline-current-symbol ((t (:foreground ,purple :weight bold))))
   `(lsp-ui-sideline-symbol ((t (:foreground ,purple))))
   `(lsp-ui-sideline-symbol-info ((t (:foreground ,grey-subtle :slant italic))))
   `(lsp-inlay-hint-face ((t (:foreground ,hint-fg :slant italic :height 0.9))))
   `(lsp-inlay-hint-type-face ((t (:foreground ,grey-subtle :slant italic :height 0.9))))
   `(lsp-inline-completion-overlay-face ((t (:foreground ,grey-subtle :background ,completion-bg :slant italic))))
   `(lsp-signature-highlight-function-argument ((t (:foreground ,purple :weight bold :underline (:style line :color ,purple)))))

   ;; DAP (Debug Adapter Protocol) faces
   `(dap-ui-breakpoint-verified-fringe ((t (:foreground ,green))))
   `(dap-ui-pending-breakpoint-face ((t (:foreground ,yellow))))
   `(dap-ui-marker-face ((t (:background ,bg-selection))))
   `(dap-ui-compile-errline ((t (:foreground ,magenta))))
   `(dap-ui-compile-warnline ((t (:foreground ,yellow))))

   ;; Corfu, Vertico, and friends
   `(corfu-default ((t (:background ,bg-popup :foreground ,fg-popup :height 0.9))))
   `(corfu-current ((t (:background ,bg-selection :foreground ,fg-bright))))
   `(corfu-bar ((t (:background ,grey-border))))
   `(corfu-border ((t (:background ,grey-border))))
   `(corfu-deprecated ((t (:foreground ,grey-subtle :strike-through t))))
   `(corfu-annotation ((t (:foreground ,grey-subtle :slant italic))))
   `(corfu-echo ((t (:foreground ,grey-subtle :slant italic))))
   `(corfu-metadata-face ((t (:foreground ,grey-subtle))))
   `(corfu-documentation-face ((t (:foreground ,grey-subtle))))
   `(corfu-quick-face ((t (:foreground ,yellow))))
   `(corfu-quick1-face ((t (:foreground ,purple))))
   `(corfu-quick2-face ((t (:foreground ,magenta))))
   `(corfu-quick1 ((t (:foreground ,purple :weight bold))))
   `(corfu-quick2 ((t (:foreground ,magenta :weight bold))))
   `(corfu-quick3 ((t (:foreground ,yellow :weight bold))))
   `(vertico-current ((t (:background ,bg-selection :foreground ,fg-bright))))
   `(vertico-group-title ((t (:foreground ,purple :weight bold))))
   `(vertico-group-separator ((t (:foreground ,grey-border :strike-through t))))
   `(vertico-multiline ((t (:foreground ,grey-subtle))))
   `(vertico-quick1 ((t (:foreground ,purple :weight bold))))
   `(vertico-quick2 ((t (:foreground ,magenta :weight bold))))
   `(vertico-quick3 ((t (:foreground ,yellow :weight bold))))
   `(vertico-posframe ((t (:background ,bg-popup))))
   `(vertico-posframe-border ((t (:background ,bg-popup))))
   `(marginalia-key ((t (:foreground ,purple))))
   `(marginalia-type ((t (:foreground ,magenta))))
   `(marginalia-modified ((t (:foreground ,yellow))))
   `(marginalia-file-name ((t (:foreground ,grey-subtle))))
   `(marginalia-file-owner ((t (:foreground ,grey-subtle))))
   `(marginalia-file-priv-no ((t (:foreground ,grey-subtle))))
   `(marginalia-file-priv-dir ((t (:foreground ,purple))))
   `(marginalia-file-priv-exec ((t (:foreground ,green))))
   `(marginalia-file-priv-link ((t (:foreground ,yellow))))
   `(marginalia-file-priv-read ((t (:foreground ,magenta))))
   `(marginalia-file-priv-write ((t (:foreground ,magenta))))
   `(marginalia-size ((t (:foreground ,grey-subtle))))
   `(marginalia-number ((t (:foreground ,grey-subtle))))
   `(marginalia-char ((t (:foreground ,purple))))
   `(marginalia-date ((t (:foreground ,grey-subtle))))
   `(marginalia-documentation ((t (:foreground ,grey-subtle :slant italic))))
   `(marginalia-function ((t (:foreground ,purple))))
   `(marginalia-mode ((t (:foreground ,magenta))))
   `(marginalia-variable ((t (:foreground ,purple))))
   `(marginalia-version ((t (:foreground ,green))))
   `(orderless-match-face-0 ((t (:foreground ,purple :weight bold))))
   `(orderless-match-face-1 ((t (:foreground ,magenta :weight bold))))
   `(orderless-match-face-2 ((t (:foreground ,green :weight bold))))
   `(orderless-match-face-3 ((t (:foreground ,yellow :weight bold))))

   ;; xref
   `(xref-file-header ((t (:foreground ,purple :weight bold))))
   `(xref-line-number ((t (:foreground ,grey-subtle))))
   `(xref-match ((t (:background ,bg-selection :foreground ,fg-bright))))

   ;; Treemacs
   `(treemacs-root-face ((t (:foreground ,purple :weight bold :height 1.2))))
   `(treemacs-root-unreadable-face ((t (:foreground ,grey-subtle :strike-through t))))
   `(treemacs-directory-face ((t (:foreground ,fg-bright))))
   `(treemacs-directory-collapsed-face ((t (:foreground ,fg-bright))))
   `(treemacs-file-face ((t (:foreground ,fg-main))))
   `(treemacs-git-modified-face ((t (:foreground ,magenta))))
   `(treemacs-git-added-face ((t (:foreground ,green))))
   `(treemacs-git-conflict-face ((t (:foreground ,magenta))))
   `(treemacs-git-untracked-face ((t (:foreground ,yellow))))
   `(treemacs-git-renamed-face ((t (:foreground ,purple))))
   `(treemacs-git-ignored-face ((t (:foreground ,grey-subtle))))
   `(treemacs-term-node-face ((t (:foreground ,purple))))
   `(treemacs-tags-face ((t (:foreground ,yellow))))
   `(treemacs-help-title-face ((t (:foreground ,purple :weight bold))))
   `(treemacs-help-column-face ((t (:foreground ,grey-subtle))))
   `(treemacs-on-success-pulse-face ((t (:background ,green :foreground ,bg-main))))
   `(treemacs-on-failure-pulse-face ((t (:background ,magenta :foreground ,bg-main))))
   `(treemacs-fringe-indicator-face ((t (:foreground ,purple))))
   `(treemacs-header-button-face ((t (:foreground ,grey-subtle))))
   `(treemacs-marked-file-face ((t (:foreground ,yellow :weight bold))))
   `(treemacs-file-extension-face ((t (:foreground ,fg-main))))
   `(treemacs-modeline-selected-face ((t (:foreground ,purple :weight bold))))
   `(treemacs-modeline-active-face ((t (:foreground ,fg-bright))))
   `(treemacs-git-commit-diff-face ((t (:foreground ,magenta))))
   `(treemacs-git-push-face ((t (:foreground ,green))))
   `(treemacs-git-pull-face ((t (:foreground ,yellow))))

   ;; doom-modeline
   `(doom-modeline-bar ((t (:background ,bg-alt :foreground ,fg-bright))))
   `(doom-modeline-buffer-file ((t (:foreground ,fg-bright))))
   `(doom-modeline-buffer-major-mode ((t (:foreground ,purple :weight bold))))
   `(doom-modeline-buffer-minor-mode ((t (:foreground ,grey-subtle))))
   `(doom-modeline-buffer-modified ((t (:foreground ,magenta :weight bold))))
   `(doom-modeline-buffer-path ((t (:foreground ,purple))))
   `(doom-modeline-buffer-timemachine ((t (:foreground ,yellow))))
   `(doom-modeline-debug ((t (:foreground ,yellow))))
   `(doom-modeline-error ((t (:foreground ,magenta))))
   `(doom-modeline-evil-emacs-state ((t (:foreground ,magenta))))
   `(doom-modeline-evil-insert-state ((t (:foreground ,green))))
   `(doom-modeline-evil-motion-state ((t (:foreground ,grey-subtle))))
   `(doom-modeline-evil-normal-state ((t (:foreground ,purple))))
   `(doom-modeline-evil-visual-state ((t (:foreground ,yellow))))
   `(doom-modeline-inactive-bar ((t (:background ,bg-contrast :foreground ,fg-bright))))
   `(doom-modeline-info ((t (:foreground ,green))))
   `(doom-modeline-lsp-error ((t (:foreground ,magenta))))
   `(doom-modeline-lsp-success ((t (:foreground ,green))))
   `(doom-modeline-lsp-warning ((t (:foreground ,yellow))))
   `(doom-modeline-persp-name ((t (:foreground ,purple))))
   `(doom-modeline-project-dir ((t (:foreground ,yellow :weight bold))))
   `(doom-modeline-project-parent-dir ((t (:foreground ,grey-subtle))))
   `(doom-modeline-project-root ((t (:foreground ,purple))))
   `(doom-modeline-repl-error ((t (:foreground ,magenta))))
   `(doom-modeline-repl-success ((t (:foreground ,green))))
   `(doom-modeline-repl-warning ((t (:foreground ,yellow))))
   `(doom-modeline-warning ((t (:foreground ,yellow))))
   `(doom-modeline-workspace-number ((t (:foreground ,magenta))))

   ;; mood line
   `(mood-line-buffer-name ((t (:foreground ,fg-bright :weight bold))))
   `(mood-line-buffer-status-modified ((t (:foreground ,magenta :weight bold))))
   `(mood-line-buffer-status-read-only ((t (:foreground ,yellow :weight bold))))
   `(mood-line-buffer-status-narrowed ((t (:foreground ,purple :weight bold))))
   `(mood-line-major-mode ((t (:foreground ,purple :weight bold))))
   `(mood-line-status-neutral ((t (:foreground ,grey-subtle))))
   `(mood-line-status-info ((t (:foreground ,green))))
   `(mood-line-status-success ((t (:foreground ,green :weight bold))))
   `(mood-line-status-warning ((t (:foreground ,yellow :weight bold))))
   `(mood-line-status-error ((t (:foreground ,magenta :weight bold))))
   `(mood-line-encoding ((t (:foreground ,grey-subtle))))
   `(mood-line-unimportant ((t (:foreground ,grey-border))))

   ;; Line numbers
   `(line-number ((t (:foreground ,grey-subtle :background ,bg-main :slant normal :box (:line-width (1 . 3) :color ,bg-main)))))
   `(line-number-current-line ((t (:foreground ,purple :weight bold))))
   `(line-number-major-tick ((t (:foreground ,yellow :background ,bg-main :weight bold))))
   `(line-number-minor-tick ((t (:foreground ,grey-subtle :background ,bg-main :weight normal :box (:line-width (-1 . 3))))))
   `(linum ((t (:foreground ,grey-subtle :background ,bg-main :slant normal :height 0.9))))
   `(linum-relative-current-face ((t (:foreground ,purple :background ,bg-contrast :weight bold :height 1.0))))
   `(line-number-current-line-hl ((t (:foreground ,purple :background ,bg-selection :weight bold :height 1.0))))
   `(line-number-relative ((t (:foreground ,grey-subtle :background ,bg-main :height 0.9))))
   `(line-number-relative-current ((t (:foreground ,purple :background ,bg-contrast :weight bold :height 1.0))))

   ;; Parentheses
   `(show-paren-match ((t (:foreground ,magenta :background ,bg-selection :bold t))))
   `(show-paren-match-expression ((t (:background ,bg-contrast))))
   `(show-paren-mismatch ((t (:background ,error-muted :foreground ,fg-popup :weight bold :strike-through t))))
   `(sp-pair-overlay-face ((t (:background ,bg-contrast))))
   `(sp-show-pair-match-face ((t (:foreground ,green :weight bold))))
   `(sp-show-pair-mismatch-face ((t (:background ,magenta :foreground ,fg-bright :weight bold))))
   `(sp-wrap-overlay-face ((t (:background ,bg-contrast))))
   `(sp-wrap-tag-overlay-face ((t (:background ,bg-contrast))))
   `(rainbow-delimiters-depth-1-face ((t (:foreground ,magenta))))
   `(rainbow-delimiters-depth-2-face ((t (:foreground ,purple))))
   `(rainbow-delimiters-depth-3-face ((t (:foreground ,green))))
   `(rainbow-delimiters-depth-4-face ((t (:foreground ,yellow))))
   `(rainbow-delimiters-depth-5-face ((t (:foreground ,blue))))
   `(rainbow-delimiters-depth-6-face ((t (:foreground ,magenta))))
   `(rainbow-delimiters-depth-7-face ((t (:foreground ,purple))))
   `(rainbow-delimiters-depth-8-face ((t (:foreground ,green))))
   `(rainbow-delimiters-depth-9-face ((t (:foreground ,yellow))))
   `(rainbow-delimiters-unmatched-face ((t (:background ,error-muted :foreground ,fg-bright :strike-through t))))
   `(rainbow-delimiters-mismatched-face ((t (:background ,error-muted :foreground ,fg-bright :strike-through t))))

   ;; Sideline packages
   `(sideline-flycheck-error-face ((t (:foreground ,magenta))))
   `(sideline-flycheck-warning-face ((t (:foreground ,yellow))))
   `(sideline-flycheck-info-face ((t (:foreground ,purple))))
   `(sideline-lsp-face ((t (:foreground ,hint-fg))))

   ;; Avy
   `(avy-highlight-face ((t (:foreground ,magenta :weight bold))))

   ;; Treesit-jump
   `(treesit-jump-hl-line-flash-face ((t (:background ,visual-selection))))

   ;; Embark
   `(embark-target-face ((t (:foreground ,purple :weight bold))))
   `(embark-keybinding-face ((t (:foreground ,yellow))))
   `(embark-collect-match-face ((t (:background ,focus-bg))))

   ;; Breadcrumb package faces
   `(breadcrumb-face ((t (:foreground ,grey-subtle :height 0.9 :weight light :box (:line-width (2 . 8) :color ,bg-alt)))))
   `(breadcrumb-imenu-crumbs-face ((t (:foreground ,lavender :height 0.9 :weight normal :slant italic :box (:line-width (2 . 8) :color ,bg-alt)))))
   `(breadcrumb-imenu-leaf-face ((t (:foreground ,purple :height 0.85 :weight semi-bold :box (:line-width (2 . 8) :color ,bg-alt)))))
   `(breadcrumb-project-crumbs-face ((t (:foreground ,grey-docstring :height 0.9 :weight light :box (:line-width (2 . 8) :color ,bg-alt)))))
   `(breadcrumb-project-base-face ((t (:foreground ,blue :height 0.9 :weight normal :box (:line-width (2 . 8) :color ,bg-alt)))))
   `(breadcrumb-project-leaf-face ((t (:foreground ,fg-popup :height 0.85 :weight semi-bold :box (:line-width (2 . 8) :color ,bg-alt)))))

   ;; Misc Packages
   `(yas-field-highlight-face ((t (:background ,bg-selection))))
   `(consult-preview-line ((t (:background ,bg-contrast))))
   `(consult-highlight-match-face ((t (:foreground ,purple :weight bold))))
   `(copilot-ghost-text-face ((t (:foreground ,grey-border :slant italic))))
   `(copilot-highlight-face ((t (:background ,focus-bg))))
   `(aidermacs-diff-face-added ((t (:inherit diff-added))))
   `(aidermacs-diff-face-removed ((t (:inherit diff-removed))))
   `(aidermacs-diff-face-changed ((t (:inherit diff-changed))))
   `(aidermacs-chat-prompt-face ((t (:foreground ,purple :weight bold))))
   `(aidermacs-chat-user-prompt-face ((t (:foreground ,teal :weight bold))))
   `(aidermacs-chat-response-face ((t (:foreground ,fg-main))))
   `(aidermacs-chat-model-face ((t (:foreground ,yellow :slant italic))))
   `(aidermacs-architect-mode-line-face ((t (:foreground ,teal :weight bold))))
   `(hl-todo ((t (:foreground ,yellow :weight bold))))
   `(hl-fixme ((t (:foreground ,magenta :weight bold))))
   `(hl-note ((t (:foreground ,blue :weight bold))))
   `(hl-done ((t (:foreground ,green :weight bold))))
   `(deft-current-line-face ((t (:background ,bg-contrast))))
   `(deft-file-face ((t (:foreground ,purple))))
   `(deft-title-face ((t (:foreground ,fg-main :weight bold))))
   `(deft-summary-face ((t (:foreground ,grey-subtle :slant italic))))
   `(conventional-commit-type-face ((t (:foreground ,magenta :weight bold))))
   `(conventional-commit-scope-face ((t (:foreground ,yellow :slant italic))))
   `(conventional-commit-breaking-change-face ((t (:foreground ,error-muted :weight bold))))
   `(forge-topic-title-face ((t (:foreground ,fg-main :weight bold))))
   `(forge-pr-author-face ((t (:foreground ,purple))))
   `(forge-label-face ((t (:background ,bg-selection :foreground ,fg-main :box (:line-width -1 :color ,bg-selection :style released-button) :height 0.9))))
   `(github-review-comment-face ((t (:background ,bg-contrast))))
   `(github-review-suggestion-face ((t (:background ,diff-changed-bg :foreground ,diff-changed-fg))))
   `(expand-region ((t (:background ,visual-selection))))
   `(er--highlight-face ((t (:background ,visual-selection))))
   `(symbol-overlay-default-face ((t (:background ,focus-bg))))
   `(symbol-overlay-current-face ((t (:background ,purple :foreground ,bg-main))))
   `(treesitter-context-face ((t (:background ,bg-code :foreground ,grey-subtle :height 0.9))))
   `(treesit-fold-face ((t (:foreground ,grey-border))))
   `(cognitive-complexity-highlight-face ((t (:background ,warning-muted :foreground ,bg-main))))
   `(vr/match-face ((t (:background ,purple :foreground ,bg-main))))
   `(better-jumper-marker-face ((t (:foreground ,rose :underline t))))
   `(my-rust-macro-face ((t (:inherit font-lock-function-call-face :foreground ,magenta :slant italic :weight bold :underline (:style line :color ,magenta)))))
   `(my-rust-attribute-face ((t (:inherit font-lock-preprocessor-face :foreground ,lavender :slant italic))))
   `(jinx-correcting-face ((t (:underline (:style wave :color ,yellow)))))
   `(jinx-suggestion-face ((t (:foreground ,green :weight bold))))
   `(undo-tree-visualizer-current-face ((t (:foreground ,green :weight bold))))
   `(undo-tree-visualizer-active-branch-face ((t (:foreground ,purple))))
   `(undo-tree-visualizer-register-face ((t (:foreground ,yellow))))
   `(annotate-highlight-face ((t (:underline (:style line :color ,purple)))))
   `(annotate-annotation-text-face ((t (:foreground ,grey-subtle :slant italic :height 0.9))))
   `(ibuffer-current-buffer-face ((t (:background ,bg-contrast :weight bold))))
   `(ibuffer-marked-face ((t (:foreground ,magenta :weight bold))))

   ;; Dashboard faces
   `(dashboard-banner ((t (:foreground ,purple))))
   `(dashboard-heading ((t (:foreground ,yellow :bold t))))
   `(dashboard-project-title ((t (:foreground ,blue :bold t))))
   `(dashboard-item-highlight ((t (:background ,focus-bg))))

   ;; Eglot diagnostic faces
   `(eglot-highlight-symbol-face ((t (:background ,focus-bg))))
   `(eglot-mode-line ((t (:foreground ,purple :weight bold))))
   `(eglot-diagnostic-tag-deprecated-face ((t (:strike-through t :foreground ,grey-subtle))))
   `(eglot-diagnostic-tag-unnecessary-face ((t (:foreground ,grey-subtle :slant italic))))

   ;; Eglot inlay hints (similar to lsp inlay hints)
   `(eglot-inlay-hint-face ((t (:foreground ,hint-fg :slant italic :height 0.9))))
   `(eglot-type-hint-face ((t (:foreground ,grey-subtle :slant italic :height 0.9))))
   `(eglot-parameter-hint-face ((t (:foreground ,hint-fg :slant italic :height 0.9))))

   ;; Eglot code actions (appears in modeline and overlays)
   `(eglot-code-action-face ((t (:foreground ,yellow)))))

  (custom-theme-set-variables
   'dark-tale
   '(linum-format " %3i ")
   ;; Use palette variables for maintainability
   `(hl-todo-keyword-faces
     ',(list (cons "TODO"  (list :foreground yellow :weight 'bold))
             (cons "FIXME" (list :foreground magenta :weight 'bold))
             (cons "DEBUG" (list :foreground purple :weight 'bold))
             (cons "NOTE"  (list :foreground blue :weight 'bold))
             (cons "DONE"  (list :foreground green :weight 'bold))))))

;;;###autoload
(when load-file-name
  (add-hook 'special-mode-hook (lambda ()
                                 (setq buffer-face-mode-face `(:background "#232323" :height 0.9)) ;; "#A0A0A0"
                                 (buffer-face-mode 1)))
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

;;;###autoload
(defun dark-tale-theme ()
  "Apply the dark-tale-theme."
  (interactive)
  (load-theme 'dark-tale t))

(provide-theme 'dark-tale)

;;; dark-tale-theme.el ends here
